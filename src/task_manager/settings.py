"""
Django settings for task_manager project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6i4fb(8v_ofu1$3a%u+95lpt_a8l778h*1=(-$adcz**f(-07o'

# SECURITY WARNING: don't run with debug turned on in production!
if os.getenv('DEBUG') == "False":
    DEBUG = False
else:
    DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'home',
    'tasks',
    'crispy_forms',
    'crispy_bootstrap5', 
    #'perfil_users',
    'perfil_users.apps.PerfilUsersConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',
    'ckeditor_uploader',    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'task_manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'TaskContextProcessors.contextProcessors.injecAppsContextProcessor',             
            ],
        },
    },
]

APP_URLS = {
    # "nomedogrupo": [
    #     ("Titulo para o front", "url"),
    # ],
    "tasks": [
        ("Tarefas", "/tasks"),
    ],
    "users": [
        ("Listar usuarios", "/users"),
    ],
    "timeEntry": [
        ("Controle de tempo", "/timeentry"),
    ],
     
}

#   CRISPY FORMS
CRISPY_TEMPLATE_PACK = "bootstrap5"

# AUTH CONFIG
LOGIN_REDIRECT_URL='home/'
LOGIN_URL='login'
LOGOUT_REDIRECT_URL='/login/'

WSGI_APPLICATION = 'task_manager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

#condicional para rodar com docker ter os dados do banco 
if os.getenv('DEBUG') == "False":
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DATABASE_DB'),
        'USER': os.getenv('DATABASE_USER'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD'),
        'HOST': 'db',
        'PORT': '5432',
    }
}
else:
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# Habilitar a localização
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = '/media/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'perfil_users.CustomUser'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Certifique-se de ter esse backend padrão do Django
)


# CKEditor Settings
CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_IMAGE_BACKEND = "pillow"

CKEDITOR_JQUERY_URL = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js' 
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'extraPlugins': 'image2,codesnippet',  # Habilita o plugin de imagens avançadas e blocos de código
        'removePlugins': 'image',
       
        'codeSnippet_theme': 'monokai_sublime',  # Tema do bloco de código
        'height': 'auto',
        'width': 'auto',
        'toolbarCanCollapse': True,
        'resize_enabled': True,  # Permite o redimensionamento do editor
        'image2_alignClasses': ['image-left', 'image-center', 'image-right'],  # Classes de alinhamento para imagem
        'image2_captionedClass': 'image-captioned',  # Classe CSS para imagens com legenda
        'image2_disableResizer': False,  # Permitir redimensionamento com mouse
    }
}
